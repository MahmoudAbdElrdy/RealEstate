// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstate.Data.Models;

namespace RealEstate.Data.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    [Migration("20211019220908_Password")]
    partial class Password
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstate.Data.Models.CancelledContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Back")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CancelledContract");
                });

            modelBuilder.Entity("RealEstate.Data.Models.CancelledContractBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("CancelledContractBill");
                });

            modelBuilder.Entity("RealEstate.Data.Models.CompanyBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyBill");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsStock")
                        .HasColumnType("bit");

                    b.Property<double?>("MeterCost")
                        .HasColumnType("float");

                    b.Property<double?>("MetersCount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<int?>("ProjectUnitId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectUnitID");

                    b.Property<double?>("StockCount")
                        .HasColumnType("float");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProjectUnitId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ContractDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsExtra")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractDetail");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ContractDetailBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractDetailId")
                        .HasColumnType("int")
                        .HasColumnName("ContractDetailID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContractDetailId");

                    b.ToTable("ContractDetailBill");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referrer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Dblog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DBLog");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WorkSince")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeePenalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeSalaryId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeSalaryID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSalaryId");

                    b.ToTable("EmployeePenalty");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeeReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeSalaryId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeSalaryID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSalaryId");

                    b.ToTable("EmployeeReward");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeeSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSalary");
                });

            modelBuilder.Entity("RealEstate.Data.Models.GoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMaterials")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GoodsType");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Mail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchiveFrom")
                        .HasColumnType("bit");

                    b.Property<bool>("ArchiveTo")
                        .HasColumnType("bit");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("date");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mail");
                });

            modelBuilder.Entity("RealEstate.Data.Models.MaterialsAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int")
                        .HasColumnName("PurchaseID");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("MaterialsAllocation");
                });

            modelBuilder.Entity("RealEstate.Data.Models.MaterialsPurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Available")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<double>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("([Quantity]*[UnitPrice])", false);

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialsPurchase");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MeterCost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectUnitDescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectUnitDescriptionID");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProjectUnitDescriptionId");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProgramDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("ProgramID");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramDetail");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floors")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<int?>("SiteRepId")
                        .HasColumnType("int")
                        .HasColumnName("SiteRepID");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SiteRepId");

                    b.ToTable("ProjectExpenses");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ProjectUnitDescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectUnitDescriptionID");

                    b.HasKey("Id");

                    b.HasIndex("ProjectUnitDescriptionId");

                    b.ToTable("ProjectUnit");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectUnitDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("Bath")
                        .HasColumnType("int");

                    b.Property<int>("Kitchen")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<int>("Room")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectUnitDescription");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVisit");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Question1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Question");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("RealEstate.Data.Models.SiteRep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteRep");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("RealEstate.Data.Models.SupplierPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("Paid")
                        .HasColumnType("float");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierPayment");
                });

            modelBuilder.Entity("RealEstate.Data.Models.CancelledContractBill", b =>
                {
                    b.HasOne("RealEstate.Data.Models.CancelledContract", "Contract")
                        .WithMany("CancelledContractBills")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK_CancelledContractBill_CancelledContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Contract", b =>
                {
                    b.HasOne("RealEstate.Data.Models.ProjectUnit", "ProjectUnit")
                        .WithMany("Contracts")
                        .HasForeignKey("ProjectUnitId")
                        .HasConstraintName("FK_Contract_ProjectUnit")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProjectUnit");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ContractDetail", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Contract", "Contract")
                        .WithMany("ContractDetails")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK_ContractDetail_Contract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ContractDetailBill", b =>
                {
                    b.HasOne("RealEstate.Data.Models.ContractDetail", "ContractDetail")
                        .WithMany("ContractDetailBills")
                        .HasForeignKey("ContractDetailId")
                        .HasConstraintName("FK_ContractDetailBill_ContractDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractDetail");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeePenalty", b =>
                {
                    b.HasOne("RealEstate.Data.Models.EmployeeSalary", "EmployeeSalary")
                        .WithMany("EmployeePenalties")
                        .HasForeignKey("EmployeeSalaryId")
                        .HasConstraintName("FK_EmployeePenalty_EmployeeSalary")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeSalary");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeeReward", b =>
                {
                    b.HasOne("RealEstate.Data.Models.EmployeeSalary", "EmployeeSalary")
                        .WithMany("EmployeeRewards")
                        .HasForeignKey("EmployeeSalaryId")
                        .HasConstraintName("FK_EmployeeRewards_EmployeeSalary")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeSalary");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeeSalary", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Employee", "Employee")
                        .WithMany("EmployeeSalaries")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_EmployeeSalary_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RealEstate.Data.Models.MaterialsAllocation", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Project", "Project")
                        .WithMany("MaterialsAllocations")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ItemAllocation_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate.Data.Models.MaterialsPurchase", "Purchase")
                        .WithMany("MaterialsAllocations")
                        .HasForeignKey("PurchaseId")
                        .HasConstraintName("FK_ItemAllocation_ItemPurchase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("RealEstate.Data.Models.MaterialsPurchase", b =>
                {
                    b.HasOne("RealEstate.Data.Models.GoodsType", "Item")
                        .WithMany("MaterialsPurchases")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_Purchase_Item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate.Data.Models.Supplier", "Supplier")
                        .WithMany("MaterialsPurchases")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_ItemPurchase_Dealer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Program", b =>
                {
                    b.HasOne("RealEstate.Data.Models.ProjectUnitDescription", "ProjectUnitDescription")
                        .WithMany("Programs")
                        .HasForeignKey("ProjectUnitDescriptionId")
                        .HasConstraintName("FK_Program_ProjectUnitDescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectUnitDescription");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProgramDetail", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Program", "Program")
                        .WithMany("ProgramDetails")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK_ProgramDetail_Program")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectExpense", b =>
                {
                    b.HasOne("RealEstate.Data.Models.GoodsType", "Item")
                        .WithMany("ProjectExpenses")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_ProjectExpenses_EnumItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate.Data.Models.Project", "Project")
                        .WithMany("ProjectExpenses")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectExpenses_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate.Data.Models.SiteRep", "SiteRep")
                        .WithMany("ProjectExpenses")
                        .HasForeignKey("SiteRepId")
                        .HasConstraintName("FK_ProjectExpenses_SiteRep")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Item");

                    b.Navigation("Project");

                    b.Navigation("SiteRep");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectUnit", b =>
                {
                    b.HasOne("RealEstate.Data.Models.ProjectUnitDescription", "ProjectUnitDescription")
                        .WithMany("ProjectUnits")
                        .HasForeignKey("ProjectUnitDescriptionId")
                        .HasConstraintName("FK_ProjectUnit_ProjectUnitDescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectUnitDescription");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectUnitDescription", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Project", "Project")
                        .WithMany("ProjectUnitDescriptions")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectUnitDescription_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectVisit", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Customer", "Customer")
                        .WithMany("ProjectVisits")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_ProjectVisits_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate.Data.Models.Project", "Project")
                        .WithMany("ProjectVisits")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ProjectVisits_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Question", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Customer", "Customer")
                        .WithMany("Questions")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Questions_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RealEstate.Data.Models.SupplierPayment", b =>
                {
                    b.HasOne("RealEstate.Data.Models.Supplier", "Supplier")
                        .WithMany("SupplierPayments")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_DealerPayment_Dealer1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RealEstate.Data.Models.CancelledContract", b =>
                {
                    b.Navigation("CancelledContractBills");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Contract", b =>
                {
                    b.Navigation("ContractDetails");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ContractDetail", b =>
                {
                    b.Navigation("ContractDetailBills");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Customer", b =>
                {
                    b.Navigation("ProjectVisits");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Employee", b =>
                {
                    b.Navigation("EmployeeSalaries");
                });

            modelBuilder.Entity("RealEstate.Data.Models.EmployeeSalary", b =>
                {
                    b.Navigation("EmployeePenalties");

                    b.Navigation("EmployeeRewards");
                });

            modelBuilder.Entity("RealEstate.Data.Models.GoodsType", b =>
                {
                    b.Navigation("MaterialsPurchases");

                    b.Navigation("ProjectExpenses");
                });

            modelBuilder.Entity("RealEstate.Data.Models.MaterialsPurchase", b =>
                {
                    b.Navigation("MaterialsAllocations");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Program", b =>
                {
                    b.Navigation("ProgramDetails");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Project", b =>
                {
                    b.Navigation("MaterialsAllocations");

                    b.Navigation("ProjectExpenses");

                    b.Navigation("ProjectUnitDescriptions");

                    b.Navigation("ProjectVisits");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectUnit", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("RealEstate.Data.Models.ProjectUnitDescription", b =>
                {
                    b.Navigation("Programs");

                    b.Navigation("ProjectUnits");
                });

            modelBuilder.Entity("RealEstate.Data.Models.SiteRep", b =>
                {
                    b.Navigation("ProjectExpenses");
                });

            modelBuilder.Entity("RealEstate.Data.Models.Supplier", b =>
                {
                    b.Navigation("MaterialsPurchases");

                    b.Navigation("SupplierPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
